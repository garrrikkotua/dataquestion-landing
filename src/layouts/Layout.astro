---
export interface Props {
  title: string;
}

import Header from "../components/Header";
import Footer from "../components/Footer.astro";
import CTA from "../components/CTA.astro";
import "@styles/main.css";

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta
      name="description"
      content="Build intelligent SQL queries with AI-powered features. Visualize data using charts and dashboards. Enhance your data analysis with our SQL query builder tool."
    />

    <!-- Open Graph Meta Tags -->
    <meta
      property="og:title"
      content="SQL Query Builder with AI, Charts, and Dashboards"
    />
    <meta
      property="og:description"
      content="Build intelligent SQL queries with AI-powered features. Visualize data using charts and dashboards. Enhance your data analysis with our SQL query builder tool."
    />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://dataquestion.io" />

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta
      name="twitter:title"
      content="SQL Query Builder with AI, Charts, and Dashboards"
    />
    <meta
      name="twitter:description"
      content="Build intelligent SQL queries with AI-powered features. Visualize data using charts and dashboards. Enhance your data analysis with our SQL query builder tool."
    />

    <meta name="generator" content={Astro.generator} />
    <title>{title} | DataQuestion</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    <link rel="sitemap" href="/sitemap-index.xml" />
  </head>
  <body>
    <Header client:visible />
    <slot />
    <CTA />
    <Footer />
    <script is:inline src="https://cdn.paddle.com/paddle/paddle.js"></script>
    <script>
      const isSandbox = import.meta.env.PUBLIC_PADDLE_IS_SANDBOX === "true";
      if (isSandbox) {
        Paddle.Environment.set("sandbox");
      }
      const vendorId = parseInt(import.meta.env.PUBLIC_PADDLE_VENDOR_ID);
      Paddle.Setup({ vendor: vendorId });
    </script>
  </body>
</html>
