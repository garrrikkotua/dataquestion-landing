<div class="relative max-w-lg mx-auto mt-14 newsletter-form-loops-container">
  <div class="absolute -inset-x-2 -inset-y-5">
    <div class="w-full h-full mx-auto rotate-180 opacity-30 blur-lg filter">
    </div>
  </div>

  <form
    action="https://app.loops.so/api/newsletter-form/cllbu9s1s009vmk0owp2yjmt8"
    method="POST"
    class="relative newsletter-form-loops"
  >
    <input
      type="email"
      name="email"
      placeholder="Enter your email address"
      class="block w-full px-5 py-6 text-base font-normal text-black placeholder-gray-600 bg-white border border-gray-300 rounded-xl focus:border-black focus:ring-1 focus:ring-black font-pj focus:outline-none newsletter-form-input-loops"
      required
    />

    <div
      class="mt-4 sm:mt-0 sm:absolute sm:inset-y-0 sm:right-0 sm:flex sm:items-center sm:pr-3"
    >
      <button
        type="submit"
        class="inline-flex items-center justify-center w-full px-8 py-4 text-base font-bold text-white transition-all duration-200 gradient-bg border border-transparent sm:w-auto sm:py-3 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-900 font-pj hover:bg-opacity-90 rounded-xl"
      >
        Join the beta
      </button>
    </div>
  </form>
</div>

<p class="mt-6 text-sm font-normal text-center text-gray-500 font-pj">
  No payments. No commitments
</p>

<script>
  function submitHandler(event: any) {
    event.preventDefault();
    var container = event.target.parentNode;
    var formInput = container.querySelector(
      ".newsletter-form-input-loops"
    ) as any;

    const userGroup = "DataQuestion Beta Waitlist";

    var formBody =
      `userGroup=${encodeURIComponent(userGroup)}&email=` +
      encodeURIComponent(formInput?.value);
    fetch(event.target.action, {
      method: "POST",
      body: formBody,
      headers: {
        "Content-Type": "application/x-www-form-urlencoded",
      },
    })
      .then((res) => [res.ok, res.json(), res])
      .then(([ok, dataPromise, res]) => {
        if (ok) {
          // redirect to /thanks page
          window.location.href = "/thanks";
        } else {
          // show error message
          const promise = dataPromise as Promise<any>;
          promise.then((data: any) => {
            var errorMessage = data?.error?.message;
            if (errorMessage) {
              alert(errorMessage);
            } else {
              alert("Something went wrong. Please try again later.");
            }
          });
        }
      });
  }

  var formContainers = document.getElementsByClassName(
    "newsletter-form-loops-container"
  );

  // this is to add handlers
  for (var i = 0; i < formContainers.length; i++) {
    var formContainer = formContainers[i];
    var handlersAdded = formContainer.classList.contains(
      "newsletter-handlers-loops-added"
    );
    if (handlersAdded) continue;
    formContainer
      ?.querySelector(".newsletter-form-loops")
      ?.addEventListener("submit", submitHandler);
    formContainer.classList.add("newsletter-handlers-loops-added");
  }
</script>
